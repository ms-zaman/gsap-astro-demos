---
// GSAP Demo Page
---

<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>GSAP Animation Demo</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: Arial, sans-serif;
      background-color: #f5f5f5;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      overflow-x: hidden;
    }
    .container {
      width: 80%;
      max-width: 1200px;
      margin: 0 auto;
      text-align: center;
    }
    h1 {
      color: #333;
      margin-bottom: 2rem;
    }
    .box-container {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      gap: 20px;
      margin-bottom: 40px;
    }
    .box {
      width: 100px;
      height: 100px;
      background-color: #3498db;
      border-radius: 8px;
      display: flex;
      justify-content: center;
      align-items: center;
      color: white;
      font-weight: bold;
      cursor: pointer;
    }
    .circle {
      width: 150px;
      height: 150px;
      background-color: #e74c3c;
      border-radius: 50%;
      margin: 0 auto;
      opacity: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      color: white;
      font-weight: bold;
    }
    .button {
      padding: 10px 20px;
      background-color: #2ecc71;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
      margin: 10px;
    }
    .button:hover {
      background-color: #27ae60;
    }
    .timeline-demo {
      margin-top: 50px;
      padding: 20px;
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }
    .timeline-element {
      width: 50px;
      height: 50px;
      background-color: #9b59b6;
      border-radius: 4px;
      margin: 10px auto;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>GSAP Animation Demo</h1>
    
    <h2>Basic Animations</h2>
    <div class="box-container">
      <div class="box" id="box1">Box 1</div>
      <div class="box" id="box2">Box 2</div>
      <div class="box" id="box3">Box 3</div>
    </div>
    
    <button class="button" id="playButton">Play Animation</button>
    <button class="button" id="reverseButton">Reverse</button>
    
    <div class="circle" id="circle">Click Boxes!</div>
    
    <div class="timeline-demo">
      <h2>Timeline Animation</h2>
      <div class="timeline-element" id="element1"></div>
      <div class="timeline-element" id="element2"></div>
      <div class="timeline-element" id="element3"></div>
      <button class="button" id="timelineButton">Play Timeline</button>
    </div>
  </div>

  <script>
    // Import GSAP
    import { gsap } from "gsap";
    
    // Wait for the DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      // Initialize animations
      
      // Basic animations for boxes
      const box1 = document.getElementById('box1');
      const box2 = document.getElementById('box2');
      const box3 = document.getElementById('box3');
      const circle = document.getElementById('circle');
      
      // Create a reusable animation for the circle
      const circleAnimation = gsap.to(circle, {
        opacity: 1,
        scale: 1.2,
        duration: 0.5,
        yoyo: true,
        repeat: 1,
        paused: true
      });
      
      // Box 1 animation - rotate and change color
      box1.addEventListener('click', () => {
        gsap.to(box1, {
          rotation: 360,
          backgroundColor: '#f39c12',
          duration: 1,
          ease: 'power2.inOut'
        });
        
        // Show the circle with text
        circle.textContent = "Box 1 Clicked!";
        circleAnimation.restart();
      });
      
      // Box 2 animation - scale and bounce
      box2.addEventListener('click', () => {
        gsap.to(box2, {
          scale: 1.5,
          y: -30,
          duration: 0.5,
          ease: 'back.out(1.7)',
          yoyo: true,
          repeat: 1
        });
        
        // Show the circle with text
        circle.textContent = "Box 2 Clicked!";
        circleAnimation.restart();
      });
      
      // Box 3 animation - flip and change shape
      box3.addEventListener('click', () => {
        gsap.to(box3, {
          rotationY: 180,
          borderRadius: '50%',
          backgroundColor: '#1abc9c',
          duration: 0.8,
          ease: 'power1.inOut'
        });
        
        // Show the circle with text
        circle.textContent = "Box 3 Clicked!";
        circleAnimation.restart();
      });
      
      // Play button animation - animate all boxes
      const playButton = document.getElementById('playButton');
      const boxesAnimation = gsap.timeline({ paused: true });
      
      boxesAnimation
        .to(box1, { x: -100, duration: 0.5 })
        .to(box2, { y: -50, duration: 0.5 }, "<")
        .to(box3, { x: 100, duration: 0.5 }, "<")
        .to([box1, box2, box3], { 
          rotation: 360, 
          scale: 1.2,
          backgroundColor: '#9b59b6',
          duration: 1,
          stagger: 0.2
        })
        .to([box1, box2, box3], {
          rotation: 0,
          scale: 1,
          x: 0,
          y: 0,
          backgroundColor: '#3498db',
          duration: 0.8,
          stagger: 0.1
        });
      
      playButton.addEventListener('click', () => {
        boxesAnimation.play(0);
      });
      
      // Reverse button
      const reverseButton = document.getElementById('reverseButton');
      reverseButton.addEventListener('click', () => {
        boxesAnimation.reverse();
      });
      
      // Timeline demo
      const timelineButton = document.getElementById('timelineButton');
      const element1 = document.getElementById('element1');
      const element2 = document.getElementById('element2');
      const element3 = document.getElementById('element3');
      
      const demoTimeline = gsap.timeline({ paused: true });
      
      demoTimeline
        .to(element1, { 
          x: 200, 
          duration: 1, 
          ease: 'power1.inOut' 
        })
        .to(element1, { 
          rotation: 360, 
          backgroundColor: '#e74c3c',
          duration: 0.8 
        })
        .to(element2, { 
          x: -200, 
          duration: 1, 
          ease: 'power1.inOut' 
        }, "-=0.5")
        .to(element2, { 
          rotation: -360, 
          backgroundColor: '#f1c40f',
          duration: 0.8 
        })
        .to(element3, { 
          y: -50, 
          scale: 1.5,
          duration: 0.8, 
          ease: 'back.out(1.7)' 
        }, "-=0.5")
        .to([element1, element2, element3], {
          x: 0,
          y: 0,
          scale: 1,
          rotation: 0,
          backgroundColor: '#9b59b6',
          duration: 1,
          stagger: 0.2
        });
      
      timelineButton.addEventListener('click', () => {
        demoTimeline.restart();
      });
    });
  </script>
</body>
</html>
